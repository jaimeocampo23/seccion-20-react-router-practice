{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/lib/api.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/hooks/use-http.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","components/pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","components/pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/pages/NotFound.js","App.js","index.js"],"names":["module","exports","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","data","ok","Error","message","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requestData","commentData","commentId","name","getAllComments","transformedComments","commentObj","QuoteItem","props","className","classes","item","text","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","httpReducer","state","action","type","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","params","useParams","loadedComments","addedCommentHandler","lenght","HighlightedQuote","QuoteDetail","match","useRouteMatch","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1147be33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","const FIREBASE_DOMAIN = \"https://quotes-17ebf-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import {Link} from 'react-router-dom'\nimport classes from './QuoteItem.module.css';\n\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom'; \n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    }else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    })\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\nimport { getAllQuotes } from \"../lib/api\";\n\nimport QuoteList from \"../../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport NoQuotesFound from \"../quotes/NoQuotesFound\"\n\n// const DUMMY_QUOTES = [\n//     {id: 'q1', author: 'Max', text: 'Learning React'},\n//     {id: 'q2', author: 'Jaime', text: 'Learning Angular'},\n// ];\n\nconst AllQuotes = () => {\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\n\n    useEffect(() =>{\n        sendRequest();\n    }, [sendRequest])\n\n    if (status === 'pending'){\n        return (\n            <div className=\"centered\">\n                <LoadingSpinner/>\n            </div>\n        )\n    }\n\n    if(error){\n        return <p className=\"centered focused\">{error}</p>\n    }\n\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0 )){\n        return <NoQuotesFound/>\n    }\n\n    return <QuoteList quotes={loadedQuotes} />;\n};\n\n\n\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave?'}/>\n      <Card>\n        <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom\";\n\nimport QuoteForm from \"../quotes/QuoteForm\";\nimport { addQuote } from \"../lib/api\";\nimport useHttp from \"../hooks/use-http\";\nimport { useEffect } from \"react\";\n\n\nconst NewQuote = () => {\n    const {sendRequest, status} = useHttp(addQuote)\n    const history = useHistory();\n\n    useEffect(() => {\n        if(status === 'completed'){\n            history.push('/quotes');\n        }\n    }, [status, history]);\n\n    const AddQuoteHandler = quoteData =>{\n        sendRequest(quoteData)\n    }\n\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={AddQuoteHandler}/>\n};\n\nexport default NewQuote;","import { useRef, useEffect } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const {sendRequest, status, error} = useHttp(addComment);\n  const {onAddedComment} = props;\n\n  useEffect(() =>{\n    if(status === 'complted' && !error){\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({commentData: {text: enteredText}, quoteId: props.quoteId});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (<div className='centered'>\n        <LoadingSpinner/>\n      </div>)}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../hooks/use-http';\nimport { getAllComments } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from '../comments/CommentsList'\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {sendRequest, status, data: loadedComments} = useHttp(getAllComments)\n\n  const {quoteId} = params\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() =>{\n    sendRequest(quoteId)\n  }, [quoteId, sendRequest])\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId])\n\n  let comments;\n\n  if(status === 'pending'){\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner/>\n      </div>\n    )\n  }\n  \n  if(status === 'completed' && loadedComments){\n    comments = <CommentsList comments={loadedComments}/>\n  }\n\n  if(status === 'completed' && (!loadedComments || loadedComments.lenght === 0)){\n    comments = <p className='centered'>No comments were added yet!</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler}/>}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect} from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\n\nimport Comments from '../comments/Comments';\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport {getSingleQuote} from \"../lib/api\"\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\n\n// const DUMMY_QOUTES = [\n//     {id: 'q1', author: 'Max', text: 'Learning React'},\n//     {id: 'q2', author: 'Jaime', text: 'Learning Angular'},\n//   ];\n\nconst QuoteDetail = () => {\n    const match = useRouteMatch();\n    const params = useParams();\n\n    const {quoteId} = params\n    const {sendRequest, status, data: loadedQuote, error} =useHttp(getSingleQuote, true);\n\n    // const quote = DUMMY_QOUTES.find(quote => quote.id === params.quoteId)\n\n    useEffect(() => {\n        sendRequest(quoteId);\n    }, [sendRequest, quoteId]);\n\n    if(status === 'pending'){\n        return (\n            <div  className=\"centered\">\n                <LoadingSpinner/>\n            </div>\n        )\n    }\n\n    if(error){\n        return <p className=\"centered\">{error}</p>\n    }\n\n    if (!loadedQuote.text){\n        return <p>No quote Found</p>\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\n            <Route path={`${match.path}`} exact>\n                <div className=\"centered\">\n                    <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n                        Load Comments\n                    </Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n    );\n};\n\nexport default QuoteDetail;","import { NavLink } from 'react-router-dom'\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n    return <header className={classes.header}>\n        <div className={classes.logo}>Great Qoutes</div>\n        <nav className={classes.nav}>\n            <ul>\n                <li>\n                    <NavLink to='/quotes' activeClassName={classes.active}>\n                        All Qoutes\n                    </NavLink>\n                </li>\n                <li>\n                    <NavLink to='/new-quote' activeClassName={classes.active}>\n                        Add a qoute\n                    </NavLink>\n                </li>\n            </ul>\n        </nav>\n    </header>\n};\n\nexport default MainNavigation;","import { Fragment } from 'react';\nimport classes from './Layout.module.css';\nimport MainNavigation from './MainNavigation';\n\n\nconst Layout = (props) => {\n    return <Fragment>\n        <MainNavigation/>\n        <main className={classes.main}>{props.children}</main>\n    </Fragment>\n};\n\nexport default Layout;","const NotFound = () => {\n    return (<div className=\"centered\">\n        <p>Page not Found!</p> \n    </div>\n    )\n}\n\nexport default NotFound;","import { Redirect, Route, Switch } from 'react-router-dom'\n\nimport AllQuotes from './components/pages/AllQuotes';\nimport NewQuote from './components/pages/NewQuote';\nimport QuoteDetail from './components/pages/QuoteDetail';\nimport Layout from './components/layout/Layout';\nimport NotFound from './components/pages/NotFound';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/quotes' />\n        </Route>\n        <Route path='/quotes' exact>\n          <AllQuotes />\n        </Route>\n        <Route path='/quotes/:quoteId'>\n          <QuoteDetail />\n        </Route>\n        <Route path='/new-quote'>\n          <NewQuote />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter><App /></BrowserRouter>);\n"],"sourceRoot":""}